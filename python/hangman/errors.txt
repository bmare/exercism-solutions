============================= test session starts =============================
platform win32 -- Python 3.7.2, pytest-5.0.0, py-1.8.0, pluggy-0.12.0
rootdir: C:\Users\Bronylsav Kabachkov\Desktop\Programming Materials\Excercism\workspace\python\hangman
collected 7 items

hangman_test.py F..F...                                                  [100%]

================================== FAILURES ===================================
____________ HangmanTests.test_after_10_failures_the_game_is_over _____________

self = <hangman_test.HangmanTests testMethod=test_after_10_failures_the_game_is_over>

    def test_after_10_failures_the_game_is_over(self):
        game = Hangman('foo')
    
        for i in range(10):
            game.guess('x')
    
        self.assertEqual(game.get_status(), hangman.STATUS_LOSE)
        with self.assertRaisesWithMessage(ValueError):
>           game.guess('x')
E           AssertionError: ValueError not raised

hangman_test.py:28: AssertionError
_______ HangmanTests.test_getting_all_the_letters_right_makes_for_a_win _______

self = <hangman_test.HangmanTests testMethod=test_getting_all_the_letters_right_makes_for_a_win>

    def test_getting_all_the_letters_right_makes_for_a_win(self):
        game = Hangman('hello')
    
        game.guess('b')
        self.assertEqual(game.get_status(), hangman.STATUS_ONGOING)
        self.assertEqual(game.remaining_guesses, 8)
        self.assertEqual(game.get_masked_word(), '_____')
    
        game.guess('e')
        self.assertEqual(game.get_status(), hangman.STATUS_ONGOING)
        self.assertEqual(game.remaining_guesses, 8)
        self.assertEqual(game.get_masked_word(), '_e___')
    
        game.guess('l')
        self.assertEqual(game.get_status(), hangman.STATUS_ONGOING)
        self.assertEqual(game.remaining_guesses, 8)
        self.assertEqual(game.get_masked_word(), '_ell_')
    
        game.guess('o')
        self.assertEqual(game.get_status(), hangman.STATUS_ONGOING)
        self.assertEqual(game.remaining_guesses, 8)
        self.assertEqual(game.get_masked_word(), '_ello')
    
        game.guess('h')
        self.assertEqual(game.get_status(), hangman.STATUS_WIN)
        self.assertEqual(game.get_masked_word(), 'hello')
    
        with self.assertRaisesWithMessage(ValueError):
>           game.guess('x')
E           AssertionError: ValueError not raised

hangman_test.py:84: AssertionError
===================== 2 failed, 5 passed in 0.10 seconds ======================
